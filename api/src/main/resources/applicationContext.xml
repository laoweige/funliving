<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="com.funliving.info.resource"/>
    <context:component-scan base-package="com.funliving.info.common"/>
    <context:annotation-config/>

    <bean id="translationManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="translationManager"/>
    <context:property-placeholder location="classpath:config.properties"/>
    <util:properties id="config" location="classpath:config.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.UserRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="apartmentRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.ApartmentRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="roomRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.RoomRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="cityRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.CityRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="collegeRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.CollegeRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="pictureRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.PictureRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="introduceRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.IntroduceRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="scheduleRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.funliving.info.repository.ScheduleRepository"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!--<bean id="productRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.chaoshike.shop.repository.ProductRepository"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="layoutRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.chaoshike.shop.repository.LayoutRepository"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->



    <!-- 定时器  这个是定时器要调用方法的类 -->
    <!--<bean id="dbSynService" class="com.zhaopin.search.DBDateAccess.DBSynService" />-->
    <!--&lt;!&ndash; 定义调用对象和调用对象的方法   &ndash;&gt;-->
    <!--<task:scheduled-tasks>-->
        <!--&lt;!&ndash; 调用的类deletePicTimer    调用类中的方法deletePic   这里表示的是每1分钟调用一次 &ndash;&gt;-->
        <!--&lt;!&ndash;<task:scheduled ref="dbSynService" method="synchronizeDB" cron="0 */1 * * * *"/>&ndash;&gt;-->
        <!--<task:scheduled ref="dbSynService" method="synchronizeDB" cron="0 0 */1 * * *"/>-->
    <!--</task:scheduled-tasks>-->
</beans>
